name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ci-cd-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE_NAME: vranjan041/to_do
      DOCKER_TAG: latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Backend Docker Image
        run: |
          docker build -t $DOCKER_IMAGE_NAME-backend:$DOCKER_TAG -f Dockerfile.backend .

      - name: Build Frontend Docker Image
        run: |
          docker build -t $DOCKER_IMAGE_NAME-frontend:$DOCKER_TAG -f Dockerfile.frontend .

      - name: Log in to DockerHub
        run: |
          echo ${{ secrets.password }} | docker login -u ${{ secrets.username }} --password-stdin

      - name: Push Backend Docker Image to DockerHub with Retry
        run: |
          retries=3
          delay=5
          for i in $(seq 1 $retries); do
            docker push $DOCKER_IMAGE_NAME-backend:$DOCKER_TAG && break
            echo "Docker push failed. Retrying in $delay seconds..."
            sleep $delay
            delay=$((delay * 2)) # Exponential backoff
          done

      - name: Push Frontend Docker Image to DockerHub with Retry
        run: |
          retries=3
          delay=5
          for i in $(seq 1 $retries); do
            docker push $DOCKER_IMAGE_NAME-frontend:$DOCKER_TAG && break
            echo "Docker push failed. Retrying in $delay seconds..."
            sleep $delay
            delay=$((delay * 2)) # Exponential backoff
          done

  run_deployment_on_minikube:
    name: Run on kubernetes cluster
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: start minikube
        uses: medyagh/setup-minikube@v0.0.16

      - name: Get pods
        run: kubectl get pods -A

      - name: checkout repo
        uses: actions/checkout@v3

      - name: Run backend deployment
        run: kubectl apply -f Deployment_bk.yaml

      - name: Run frontend deployment
        run: kubectl apply -f Deployment_fr.yaml

      - name: Wait for the pods to be ready
        run: kubectl wait --for=condition=ready pod --all --timeout=300s

      - name: kubectl get pods and svc
        run: |
          kubectl get pods
          kubectl get svc

      - name: Output Backend
        run: curl --retry 3 --retry-delay 5 --retry-max-time 30 http://192.168.49.2:30005/

      - name: Output Frontend
        run: curl --retry 3 --retry-delay 5 --retry-max-time 30 http://192.168.49.2:30006/

      # - name: Sample
